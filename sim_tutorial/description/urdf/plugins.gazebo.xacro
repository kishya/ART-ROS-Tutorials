<?xml version="1.0"?>
<robot name="plugins" xmlns:xacro="http://ros.org/wiki/xacro">

    <!-- LIDAR -->
    <gazebo reference="scan_link">
        <sensor type="gpu_ray" name="head_hokuyo_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>30.0</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>1080</samples>
                        <resolution>1</resolution>
                        <min_angle>${-0.5*270*pi/180}</min_angle>
                        <max_angle>${0.5*270*pi/180}</max_angle>
                    </horizontal>
                </scan>
            <range>
                <min>0.06</min>
                <max>10</max>
                <resolution>${0.36 * pi/180}</resolution>
            </range>
            <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>${0.01/3}</stddev>
            </noise>
            </ray>

            <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
                <topicName>scan</topicName>
                <frameName>scan_link</frameName>
            </plugin>
        </sensor>
    </gazebo>
    <!-- Constants -->
    <xacro:include filename="$(find description)/urdf/constants.xacro"/>

    <!-- Differential Drive Controller -->
    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

            <alwaysOn>true</alwaysOn>
            <legacyMode>false</legacyMode>
            <rosDebugLevel>na</rosDebugLevel>

            <!-- Plugin update rate (Hz) -->
            <updateRate>30</updateRate>
            
            <!-- Name of joints connecting to wheels -->
            <leftJoint>front_left_wheel_joint</leftJoint>
            <rightJoint>front_right_wheel_joint</rightJoint>

            <!-- Wheel properties -->
            <wheelSeparation>${wheel_separation}</wheelSeparation>
            <wheelDiameter>${2.0 * wheel_radius}</wheelDiameter>
            <wheelAcceleration>0</wheelAcceleration>
            <wheelTorque>5</wheelTorque>
            <torque>5</torque>

            <!-- Topic to receive geometry_msgs/Twist message commands -->
            <commandTopic>cmd_vel</commandTopic>

            <!-- Odometry (nav_msgs/Odometry) settings -->
            <odometrySource>world</odometrySource>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>

            <!-- Robot frame to calculate odometry from -->
            <robotBaseFrame>base_link</robotBaseFrame>

            <!-- Publish TF frames -->
            <publishTf>true</publishTf>
            <publishOdomTF>true</publishOdomTF>

            <publishWheelTF>false</publishWheelTF>
            <publishWheelJointState>true</publishWheelJointState>

            <!-- TODO: enforce velocity/acceleration limits -->

        </plugin>
    </gazebo>

    <!-- ROS Control: Reads transmission tags -->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so"/>
    </gazebo>

</robot>